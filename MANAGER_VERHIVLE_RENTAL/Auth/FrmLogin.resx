<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AQAAAABJRU5ErkJggg==
</value>
  </data>
</root>